{"version":3,"sources":["context/index.js","components/stage_1.js","components/stage_2.js","App.js","index.js"],"names":["MyContext","React","createContext","MyProvider","state","stage","players","result","addPlayerHandler","name","setState","prevState","removePlayerHandler","idx","newArray","splice","nextHandler","length","toast","error","position","POSITION","TOP_LEFT","autoClose","setTimeout","generateLooser","Math","floor","random","resetGame","Provider","value","this","addPlayer","removePlayer","next","getNewLooser","props","children","Component","Stage1","textInput","useRef","context","useContext","useState","setError","validateInput","console","log","Form","onSubmit","e","preventDefault","current","className","Group","Control","type","placeholder","ref","Alert","variant","Button","map","item","onClick","Stage2","App","contextType","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b105a46.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nconst MyContext = React.createContext();\r\n\r\nclass MyProvider extends Component{\r\n    state = {\r\n        stage: 1,\r\n        players: [],\r\n        result: ''\r\n    }\r\n\r\n    addPlayerHandler = (name)=>{\r\n        this.setState((prevState)=>({\r\n            players : [\r\n                ...prevState.players,\r\n                name\r\n\r\n            ]\r\n\r\n        }))\r\n    }\r\n\r\n    removePlayerHandler=(idx)=>{\r\n        let newArray = this.state.players;\r\n        newArray.splice(idx, 1);\r\n        this.setState({players: newArray});\r\n\r\n    }\r\n\r\n    nextHandler = ()=>{\r\n        const {players} = this.state\r\n\r\n        if(players.length<2){\r\n            toast.error(\"You need more than one player!\", {\r\n                position: toast.POSITION.TOP_LEFT,\r\n                autoClose: 2000\r\n            })\r\n        }else{\r\n            this.setState({\r\n                stage: 2,\r\n            },()=>{\r\n                setTimeout(()=>{\r\n                    this.generateLooser()\r\n                },2000)\r\n            })\r\n        }\r\n    }\r\n\r\n    generateLooser = ()=>{\r\n        const {players} = this.state\r\n\r\n        this.setState({\r\n            result: players[Math.floor(Math.random()*players.length)]\r\n        })\r\n\r\n    }\r\n\r\n    resetGame=()=>{\r\n        this.setState({\r\n            stage:1,\r\n            players: [],\r\n            result: ''\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n            <MyContext.Provider value={{\r\n                state:this.state,\r\n                addPlayer: this.addPlayerHandler,\r\n                removePlayer: this.removePlayerHandler,\r\n                next: this.nextHandler,\r\n                getNewLooser: this.generateLooser,\r\n                resetGame: this.resetGame\r\n            }}>\r\n                {this.props.children}\r\n            </MyContext.Provider>\r\n            <ToastContainer />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport {\r\n    MyContext,\r\n    MyProvider\r\n}","import React, {useState, useContext, useRef} from 'react';\r\nimport {Button, Form, Alert} from 'react-bootstrap';\r\n\r\nimport { MyContext } from '../context';\r\n\r\nconst Stage1 = () => {\r\n\r\n    const textInput = useRef();\r\n    const context = useContext(MyContext);\r\n\r\n    const [error, setError] = useState([false,''])\r\n\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n\r\n        const value = textInput.current.value;\r\n\r\n        const validate = validateInput(value);\r\n\r\n        if(validate){\r\n            // form is valid ...... add player\r\n\r\n            setError([false, '']);\r\n\r\n            context.addPlayer(value)\r\n\r\n\r\n            textInput.current.value = ''\r\n        }\r\n\r\n    }\r\n\r\n    const validateInput =(value)=>{\r\n        if(value===''){\r\n            setError([true, 'Sorry, you need to add something.'])\r\n            return false;\r\n        }\r\n        if(value.length<=2){\r\n            setError([true, 'Sorry, you need 3 character at least.'])\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    console.log(context)\r\n\r\n  return (\r\n    <>\r\n      <Form onSubmit={handleSubmit} className=\"mt-4\">\r\n        <Form.Group>\r\n            <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Add player name\"\r\n                name= \"player\"\r\n                ref={textInput}\r\n            />\r\n        </Form.Group>\r\n\r\n        {error[0] ?\r\n        <Alert variant=\"danger\">\r\n            {error[1]}\r\n        </Alert> :\r\n        null\r\n        }\r\n        <Button className=\"miami\" variant=\"primary\" type=\"submit\">\r\n            Add player\r\n        </Button>\r\n        {\r\n            context.state.players && context.state.players.length > 0 ?\r\n            <>\r\n            <hr/>\r\n            <div>\r\n                <ul className=\"list-group\">\r\n                {\r\n                    context.state.players.map((item, idx)=>(\r\n                        <li key={idx} className=\"list-group-item d-flex justify-content-between align-items-center list-group-item-action\">\r\n                            {item}\r\n                            <span \r\n                            className=\"badge badge-danger\"\r\n                            onClick={()=>context.removePlayer(idx)}\r\n                            >X</span>\r\n                        </li>\r\n                    ))\r\n                }\r\n                </ul>\r\n                <div \r\n                   className=\"action_button\"\r\n                   onClick={()=> context.next()}\r\n                >\r\n                   NEXT\r\n                </div>\r\n            </div>\r\n\r\n            </>\r\n\r\n            : null\r\n        }\r\n      </Form>\r\n\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Stage1;\r\n","import React, {useContext} from 'react';\r\nimport { MyContext } from '../context';\r\n\r\n\r\nconst Stage2 = () => {\r\n  const context = useContext(MyContext);\r\n  return (\r\n    <>\r\n    <div className=\"result_wrapper\">\r\n      <h3>The looser is: </h3>\r\n      <div>{context.state.result}</div>\r\n    </div>\r\n    <div\r\n      className=\"action_button\"\r\n      onClick={()=>context.resetGame()}\r\n    >\r\n      START OVER\r\n    </div>\r\n\r\n    <div\r\n      className=\"action_button btn_2\"\r\n      onClick={()=>context.getNewLooser()}\r\n    >\r\n      GET NEW LOOSER\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Stage2;\r\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css'\nimport {MyContext} from './context/index'\nimport Stage1 from './components/stage_1';\nimport Stage2 from './components/stage_2';\nclass App extends React.Component {\n  static contextType = MyContext;\n\n\n  render(){\n    return (\n    <div className=\"wrapper\">\n      <div className=\"center-wrapper\">\n         <h1>Who pays the bill?</h1>\n         {this.context.state.stage ===1 ?\n         <Stage1/>\n         :\n         <Stage2/>\n         }\n\n      </div>\n    </div>\n  );\n}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { MyProvider } from './context/index'\n\nReactDOM.render(\n  <React.StrictMode>\n    <MyProvider>\n      <App />\n    </MyProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}